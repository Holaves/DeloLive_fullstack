[{"/home/user/MyLinuxProjects/delolive/frontend/src/index.tsx":"1","/home/user/MyLinuxProjects/delolive/frontend/src/App.tsx":"2","/home/user/MyLinuxProjects/delolive/frontend/src/store/store.ts":"3","/home/user/MyLinuxProjects/delolive/frontend/src/pages/Main.tsx":"4","/home/user/MyLinuxProjects/delolive/frontend/src/components/globalSlices/windowWidthSlice.ts":"5","/home/user/MyLinuxProjects/delolive/frontend/src/components/globalSlices/scroll.ts":"6","/home/user/MyLinuxProjects/delolive/frontend/src/components/UI/Navbar/Navbar.tsx":"7","/home/user/MyLinuxProjects/delolive/frontend/src/components/TriggersList.tsx":"8","/home/user/MyLinuxProjects/delolive/frontend/src/components/InsuranceComp.tsx":"9","/home/user/MyLinuxProjects/delolive/frontend/src/components/SpeciesInsurance.tsx":"10","/home/user/MyLinuxProjects/delolive/frontend/src/components/News.tsx":"11","/home/user/MyLinuxProjects/delolive/frontend/src/components/AboutUs.tsx":"12","/home/user/MyLinuxProjects/delolive/frontend/src/components/Trigger.tsx":"13","/home/user/MyLinuxProjects/delolive/frontend/src/components/InsuranceProg.tsx":"14","/home/user/MyLinuxProjects/delolive/frontend/src/components/NewsSlider.tsx":"15","/home/user/MyLinuxProjects/delolive/frontend/src/components/NewsWithoutSlider.tsx":"16","/home/user/MyLinuxProjects/delolive/frontend/src/components/UI/Title/Title.tsx":"17","/home/user/MyLinuxProjects/delolive/frontend/src/components/NewsItem.tsx":"18","/home/user/MyLinuxProjects/delolive/frontend/src/hooks/useSizes.ts":"19","/home/user/MyLinuxProjects/delolive/frontend/src/components/UI/Button/Button.tsx":"20","/home/user/MyLinuxProjects/delolive/frontend/src/components/UI/subDescription/SubDescriptionEl.tsx":"21"},{"size":540,"mtime":1678441167948,"results":"22","hashOfConfig":"23"},{"size":696,"mtime":1679851587334,"results":"24","hashOfConfig":"23"},{"size":432,"mtime":1679850841999,"results":"25","hashOfConfig":"23"},{"size":1100,"mtime":1679913525940,"results":"26","hashOfConfig":"23"},{"size":2108,"mtime":1679845115343,"results":"27","hashOfConfig":"23"},{"size":469,"mtime":1679852222003,"results":"28","hashOfConfig":"23"},{"size":2396,"mtime":1673352957312,"results":"29","hashOfConfig":"23"},{"size":952,"mtime":1678893197748,"results":"30","hashOfConfig":"23"},{"size":2654,"mtime":1679851590849,"results":"31","hashOfConfig":"23"},{"size":3212,"mtime":1678893035151,"results":"32","hashOfConfig":"23"},{"size":1092,"mtime":1680094700509,"results":"33","hashOfConfig":"23"},{"size":3350,"mtime":1679842003990,"results":"34","hashOfConfig":"23"},{"size":2706,"mtime":1678892950274,"results":"35","hashOfConfig":"23"},{"size":7232,"mtime":1679852459062,"results":"36","hashOfConfig":"23"},{"size":175,"mtime":1679920209441,"results":"37","hashOfConfig":"23"},{"size":1782,"mtime":1680098031386,"results":"38","hashOfConfig":"23"},{"size":692,"mtime":1678707749838,"results":"39","hashOfConfig":"23"},{"size":1167,"mtime":1680096809194,"results":"40","hashOfConfig":"23"},{"size":1872,"mtime":1678892439463,"results":"41","hashOfConfig":"23"},{"size":1063,"mtime":1673544930575,"results":"42","hashOfConfig":"23"},{"size":615,"mtime":1680092390533,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"53lqym",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"47"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/user/MyLinuxProjects/delolive/frontend/src/index.tsx",[],[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/App.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/store/store.ts",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/pages/Main.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/globalSlices/windowWidthSlice.ts",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/globalSlices/scroll.ts",["110","111"],[],"import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    value: <number>0,\n    status: 'idle',\n};\n\nexport const scrollSlice = createSlice({\n    name: 'scroll',\n    initialState,\n    reducers: {\n        scrolling: (state) => {\n            state.value = <number>window.pageYOffset\n        }\n    }\n})\n\nexport const { scrolling } = scrollSlice.actions;\n\nexport const selectScroll = (state: any) => state.scroll.value;\n\nexport default scrollSlice.reducer;","/home/user/MyLinuxProjects/delolive/frontend/src/components/UI/Navbar/Navbar.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/TriggersList.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/InsuranceComp.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/SpeciesInsurance.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/News.tsx",["112","113"],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/AboutUs.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/Trigger.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/InsuranceProg.tsx",["114"],[],"import React, { FC, useEffect, useState } from 'react';\nimport { propsTextObj } from './InsuranceComp';\nimport './styles/InsuranceProg/InsuranceProg.css'\nimport Button, { ButtonBorderVariant, ButtonTextVariant } from './UI/Button/Button';\nimport { useSizes } from '../hooks/useSizes'\nimport { selectWidth } from './globalSlices/windowWidthSlice';\nimport { useSelector } from 'react-redux';\nimport { InsuranceWH } from './globalSlices/windowWidthSlice';\nimport { selectScroll } from './globalSlices/scroll'\n\ninterface InsuranceProgProps {\n    textProps: propsTextObj;\n    img: string;\n    animationSide: \"left\" | \"right\";\n    margintop?: number;\n}\n\nconst InsuranceProg: FC<InsuranceProgProps> = ({textProps, img, margintop, animationSide}) => {\n    const [isHover, setIsHover] = useState <boolean>(false)\n    const windowWidth2: number = useSelector(selectWidth)\n    const title: string = textProps.Title\n    const [animationState, setAnimationState] = useState <boolean>(false)\n    const scrollTop = useSelector(selectScroll) as number\n\n    setInterval(() => {\n        if(scrollTop >= 370){\n            scrollEvent()\n        }\n    }, 100)\n        \n\n    const scrollEvent = () => {\n        setAnimationState(true);\n    }\n    const mouseOverHandler = (e: React.MouseEvent<HTMLDivElement>) => {\n        setIsHover(true)\n    }\n    const mouseOutHandler = (e: React.MouseEvent<HTMLDivElement>) => {\n        setIsHover(false)\n    }\n\n    return (\n        <div\n            className={!animationState ? `InsuranceProgAnimation${animationSide.charAt(0).toUpperCase() + animationSide.slice(1)}` : isHover ? 'InsuranceProgDirty' : 'InsuranceProg'}\n            onMouseOver={mouseOverHandler}\n            onMouseOut={mouseOutHandler}\n            style={{marginTop: margintop ? margintop : 0}}\n        >\n            <div className=\"containerForWrapperProg\">\n                <div className=\"InsuranceProg__wrapper\">\n                    <div className=\"InsuranceProg__wrapper__Title-Image\">\n                        <div className=\"InsuranceProg__wrapper__Title-Image__Title\">\n                            <div className=\"InsuranceProg__wrapper__Title-Image__Title__SubTitle\">\n                                <h2>{textProps.subTitle}</h2>\n                                    {textProps.IconInfo ?\n                                        <div className=\"iconInfo\"></div> :\n                                        <div></div>\n                                    }\n                            </div>\n                            <h1 className=\"InsuranceProg__wrapper__Title-Image__Title__Title\">{textProps.Title}</h1>\n                        </div>\n                        <div\n                            className=\"InsuranceProg__wrapper__Title-Image__Image\"\n                            style={{\n                                width: useSizes(InsuranceWH, 'width', title),\n                                height: useSizes(InsuranceWH, 'height', title)\n                            }}\n                        >\n                            <img src={img} alt=\"\" />\n                        </div>\n                        {windowWidth2 <= 1000 && windowWidth2 > 480? \n                            <Button\n                            text='КУПИТЬ'\n                            variantBorder={isHover ? ButtonBorderVariant.dirty : ButtonBorderVariant.black}\n                            variantText={isHover ? ButtonTextVariant.black : ButtonTextVariant.black}\n                            height={50}\n                            width={211}\n                            margintop={38}\n                        /> :\n                        <div></div>}\n                    </div>\n                    <div className=\"InsuranceProg__wrapper__textBlocks\">\n                        {textProps.textBlocks.map((item, i) => {\n                            if(i === 1)\n                            {\n                                return(\n                                    <div className=\"InsuranceProg__wrapper__textBlocks__item\" key={i + 1}>\n                                        <div>\n                                            <div className=\"foofoofoo\">\n                                                <span className=\"transparentText\">{item.transparentBlock}</span>\n                                                <span className={item.quantity.imgPath ? 'quantityObg' : 'quantity'}>\n                                                    <img src={item.quantity.imgPath} alt=\"\" /><span>{item.quantity.text}</span>\n                                                </span>\n                                            </div>\n                                            <p className='oofoofoof'>{item.Paragraph}</p>\n                                        </div>\n                                    </div>\n                                )\n                            }\n                            else\n                            {\n                                return (\n                                    <div className=\"InsuranceProg__wrapper__textBlocks__item\" key={i + 1}>\n                                        <div>\n                                            <div className=\"foofoofoo\">\n                                                <span className=\"transparentText\">{item.transparentBlock}</span>\n                                                <span className={item.quantity.imgPath ? 'quantityObg' : 'quantity'}>\n                                                    <img src={item.quantity.imgPath} alt=\"\" /><span>{item.quantity.text}</span>\n                                                </span>\n                                            </div>\n                                            <p className='oofoofoof'>{item.Paragraph}</p>\n                                        </div>\n                                    </div>\n                                )\n                            }\n                        })}\n                        <div className='before1000pxButton'>\n                            <Button\n                                text='КУПИТЬ'\n                                variantBorder={isHover ? ButtonBorderVariant.dirty : ButtonBorderVariant.black}\n                                variantText={isHover ? ButtonTextVariant.black : ButtonTextVariant.black}\n                                height={50}\n                                width={211}\n                                margintop={50}\n                            />\n                        </div>\n                    </div>\n                    \n                    \n                </div>\n                <div className='after480pxButton'>\n                {windowWidth2 <= 480 && windowWidth2 > 320? \n                        <Button\n                        text='КУПИТЬ'\n                        variantBorder={isHover ? ButtonBorderVariant.dirty : ButtonBorderVariant.black}\n                        variantText={isHover ? ButtonTextVariant.black : ButtonTextVariant.black}\n                        height={50}\n                        width={211}\n                        margintop={67}\n                    /> :\n                    <div></div>\n                }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default InsuranceProg;","/home/user/MyLinuxProjects/delolive/frontend/src/components/NewsSlider.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/NewsWithoutSlider.tsx",["115"],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/UI/Title/Title.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/NewsItem.tsx",["116","117"],[],"/home/user/MyLinuxProjects/delolive/frontend/src/hooks/useSizes.ts",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/UI/Button/Button.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/UI/subDescription/SubDescriptionEl.tsx",[],[],{"ruleId":"118","severity":1,"message":"119","line":4,"column":12,"nodeType":"120","messageId":"121","endLine":4,"endColumn":21},{"ruleId":"118","severity":1,"message":"119","line":13,"column":27,"nodeType":"120","messageId":"121","endLine":13,"endColumn":53},{"ruleId":"122","severity":1,"message":"123","line":9,"column":10,"nodeType":"124","messageId":"125","endLine":9,"endColumn":27},{"ruleId":"126","severity":1,"message":"127","line":23,"column":8,"nodeType":"128","endLine":23,"endColumn":10,"suggestions":"129"},{"ruleId":"122","severity":1,"message":"130","line":1,"column":21,"nodeType":"124","messageId":"125","endLine":1,"endColumn":30},{"ruleId":"122","severity":1,"message":"131","line":1,"column":21,"nodeType":"124","messageId":"125","endLine":1,"endColumn":29},{"ruleId":"122","severity":1,"message":"132","line":8,"column":12,"nodeType":"124","messageId":"125","endLine":8,"endColumn":28},{"ruleId":"122","severity":1,"message":"133","line":8,"column":30,"nodeType":"124","messageId":"125","endLine":8,"endColumn":49},"@typescript-eslint/consistent-type-assertions","Use 'as number' instead of '<number>'.","TSTypeAssertion","as","@typescript-eslint/no-unused-vars","'NewsItemInterface' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'NewsList'. Either include it or remove the dependency array.","ArrayExpression",["134"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'descriptionFullD' is assigned a value but never used.","'setDescriptionFullD' is assigned a value but never used.",{"desc":"135","fix":"136"},"Update the dependencies array to be: [NewsList]",{"range":"137","text":"138"},[775,777],"[NewsList]"]