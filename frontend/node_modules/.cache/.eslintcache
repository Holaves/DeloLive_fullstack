[{"/home/user/MyLinuxProjects/delolive/frontend/src/index.tsx":"1","/home/user/MyLinuxProjects/delolive/frontend/src/App.tsx":"2","/home/user/MyLinuxProjects/delolive/frontend/src/store/store.ts":"3","/home/user/MyLinuxProjects/delolive/frontend/src/pages/NewsPage.tsx":"4","/home/user/MyLinuxProjects/delolive/frontend/src/pages/Main.tsx":"5","/home/user/MyLinuxProjects/delolive/frontend/src/pages/Registration.tsx":"6","/home/user/MyLinuxProjects/delolive/frontend/src/components/globalSlices/scroll.ts":"7","/home/user/MyLinuxProjects/delolive/frontend/src/components/globalSlices/windowWidthSlice.ts":"8","/home/user/MyLinuxProjects/delolive/frontend/src/components/globalSlices/registrationSlice.ts":"9","/home/user/MyLinuxProjects/delolive/frontend/src/components/UI/Footer/Footer.tsx":"10","/home/user/MyLinuxProjects/delolive/frontend/src/components/UI/Navbar/Navbar.tsx":"11","/home/user/MyLinuxProjects/delolive/frontend/src/components/NewsListBS.tsx":"12","/home/user/MyLinuxProjects/delolive/frontend/src/components/InsuranceComp.tsx":"13","/home/user/MyLinuxProjects/delolive/frontend/src/components/SpeciesInsurance.tsx":"14","/home/user/MyLinuxProjects/delolive/frontend/src/components/TriggersList.tsx":"15","/home/user/MyLinuxProjects/delolive/frontend/src/components/AboutUs.tsx":"16","/home/user/MyLinuxProjects/delolive/frontend/src/classes/axiosRequests.ts":"17","/home/user/MyLinuxProjects/delolive/frontend/src/components/News.tsx":"18","/home/user/MyLinuxProjects/delolive/frontend/src/components/SpecialOffers.tsx":"19","/home/user/MyLinuxProjects/delolive/frontend/src/components/RegistrationForm.tsx":"20","/home/user/MyLinuxProjects/delolive/frontend/src/components/UsefulButtons.tsx":"21","/home/user/MyLinuxProjects/delolive/frontend/src/components/UI/Loader/Loader.tsx":"22","/home/user/MyLinuxProjects/delolive/frontend/src/components/UI/Button/Button.tsx":"23","/home/user/MyLinuxProjects/delolive/frontend/src/components/NewsItem.tsx":"24","/home/user/MyLinuxProjects/delolive/frontend/src/components/InsuranceProg.tsx":"25","/home/user/MyLinuxProjects/delolive/frontend/src/components/Trigger.tsx":"26","/home/user/MyLinuxProjects/delolive/frontend/src/components/NewsSlider.tsx":"27","/home/user/MyLinuxProjects/delolive/frontend/src/components/NewsWithoutSlider.tsx":"28","/home/user/MyLinuxProjects/delolive/frontend/src/components/OffersItem.tsx":"29","/home/user/MyLinuxProjects/delolive/frontend/src/components/UI/Title/Title.tsx":"30","/home/user/MyLinuxProjects/delolive/frontend/src/components/UI/FormInput/FormInput.tsx":"31","/home/user/MyLinuxProjects/delolive/frontend/src/hooks/useSizes.ts":"32","/home/user/MyLinuxProjects/delolive/frontend/src/components/UI/subDescription/SubDescriptionEl.tsx":"33","/home/user/MyLinuxProjects/delolive/frontend/src/hooks/useDate.ts":"34","/home/user/MyLinuxProjects/delolive/frontend/src/components/globalSlices/authSlice.ts":"35","/home/user/MyLinuxProjects/delolive/frontend/src/services/AuthService.ts":"36","/home/user/MyLinuxProjects/delolive/frontend/src/http/index.ts":"37"},{"size":718,"mtime":1680542086398,"results":"38","hashOfConfig":"39"},{"size":1881,"mtime":1691269439216,"results":"40","hashOfConfig":"39"},{"size":644,"mtime":1691254711805,"results":"41","hashOfConfig":"39"},{"size":1246,"mtime":1682974415173,"results":"42","hashOfConfig":"39"},{"size":1682,"mtime":1682974091718,"results":"43","hashOfConfig":"39"},{"size":626,"mtime":1691269418125,"results":"44","hashOfConfig":"39"},{"size":463,"mtime":1682974091718,"results":"45","hashOfConfig":"39"},{"size":2108,"mtime":1682974091718,"results":"46","hashOfConfig":"39"},{"size":1775,"mtime":1691239200413,"results":"47","hashOfConfig":"39"},{"size":5250,"mtime":1681241257743,"results":"48","hashOfConfig":"39"},{"size":7460,"mtime":1685175954116,"results":"49","hashOfConfig":"39"},{"size":1304,"mtime":1680714533908,"results":"50","hashOfConfig":"39"},{"size":2654,"mtime":1682974091714,"results":"51","hashOfConfig":"39"},{"size":3211,"mtime":1683456161262,"results":"52","hashOfConfig":"39"},{"size":952,"mtime":1678893197748,"results":"53","hashOfConfig":"39"},{"size":3494,"mtime":1688652131364,"results":"54","hashOfConfig":"39"},{"size":1572,"mtime":1691234622099,"results":"55","hashOfConfig":"39"},{"size":1073,"mtime":1682974091714,"results":"56","hashOfConfig":"39"},{"size":2209,"mtime":1682974091718,"results":"57","hashOfConfig":"39"},{"size":7386,"mtime":1691266574630,"results":"58","hashOfConfig":"39"},{"size":2165,"mtime":1682974091718,"results":"59","hashOfConfig":"39"},{"size":434,"mtime":1682165893722,"results":"60","hashOfConfig":"39"},{"size":1508,"mtime":1680371062408,"results":"61","hashOfConfig":"39"},{"size":1831,"mtime":1680860009268,"results":"62","hashOfConfig":"39"},{"size":7276,"mtime":1685007845399,"results":"63","hashOfConfig":"39"},{"size":2752,"mtime":1685006975205,"results":"64","hashOfConfig":"39"},{"size":2163,"mtime":1682974091714,"results":"65","hashOfConfig":"39"},{"size":2099,"mtime":1681067038926,"results":"66","hashOfConfig":"39"},{"size":1402,"mtime":1680341334589,"results":"67","hashOfConfig":"39"},{"size":692,"mtime":1678707749838,"results":"68","hashOfConfig":"39"},{"size":11798,"mtime":1691237223543,"results":"69","hashOfConfig":"39"},{"size":1825,"mtime":1683461930855,"results":"70","hashOfConfig":"39"},{"size":615,"mtime":1680092390533,"results":"71","hashOfConfig":"39"},{"size":246,"mtime":1683462418487,"results":"72","hashOfConfig":"39"},{"size":3054,"mtime":1691247910382,"results":"73","hashOfConfig":"39"},{"size":687,"mtime":1691238369313,"results":"74","hashOfConfig":"39"},{"size":334,"mtime":1691238006748,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"1wus0xh",{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"79"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"79"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"79"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"79"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"79"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"79"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/user/MyLinuxProjects/delolive/frontend/src/index.tsx",[],[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/App.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/store/store.ts",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/pages/NewsPage.tsx",["194"],[],"import React, { useEffect } from 'react';\nimport { useLoaderData, useNavigation } from 'react-router-dom';\nimport NewsItemType from '../types/NewsItem';\nimport axiosRequests from '../classes/axiosRequests';\nimport Loader from '../components/UI/Loader/Loader';\nimport NewsListBS from '../components/NewsListBS';\n\nconst NewsPage = () => {\n    const NewsList: NewsItemType[] = useLoaderData() as NewsItemType[]\n    const navigation = useNavigation()\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [navigation.state])\n    if(navigation.state == 'loading'){\n        return (\n            <div className=\"_container-1\">\n                <div className='loader-wrapper'>\n                    <Loader width={200} height={200}/>\n                </div>\n            </div>\n        )\n    }\n    return (\n        <div className='NewsPage'>\n            <div className=\"_container-1\">\n                <NewsListBS NewsList={NewsList}/>\n            </div>\n        </div>\n    );\n};\n\nexport const NewsPageLoader = async () => {\n    const resp = axiosRequests.GET<NewsItemType>('/api/news')\n    .then(response => {\n        console.log(response)\n        return response\n    })\n    .catch(e => console.log(e))\n    return resp\n}\n\n    \n\nexport default NewsPage;","/home/user/MyLinuxProjects/delolive/frontend/src/pages/Main.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/pages/Registration.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/globalSlices/scroll.ts",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/globalSlices/windowWidthSlice.ts",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/globalSlices/registrationSlice.ts",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/UI/Footer/Footer.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/UI/Navbar/Navbar.tsx",["195","196","197","198","199","200"],[],"import React, { useState, useRef, useEffect, ChangeEventHandler } from 'react';\nimport { Form, Link } from 'react-router-dom';\nimport { NavItem, Nav, NavDropdown, FormControl } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Navbar.css'\nimport axiosRequests from '../../../classes/axiosRequests';\nimport Loader from '../Loader/Loader';\nimport HelpItem from '../../../types/HelpItem';\n\nconst Navbar = () => {\n    type nameDropdown = \"\" | \"city\" | \"help\"\n    type need = 0 | 1\n    type cityType = {\n        id: number,\n        title: string,\n        area?: string;\n        region?: string\n    }\n\n    const [citiesValue, setCitiesValue] = useState <string>(\"\")\n\n    const [cities, setCities] = useState <cityType[]>([])\n    const [helps, setHelps] = useState <HelpItem[]>([])\n\n    const [isHoverDropdown, setIsHoverDropdown] = useState <nameDropdown>(\"\")\n    const [burgerButtonEl, setburgerButtonEl] = useState <string>('') \n    const [cityTitle, setCityTitle] = useState <string>('Город')\n    \n    const [firstCounter, setFirstCounter] = useState <number>(0);\n    const [sendTime, setSendTime] = useState <number>(1);\n    const [intervalId, setIntervalId] = useState <any>(null);\n    const [isLoading, setIsLoading] = useState <boolean>(false)\n\n    const liRefhelp = useRef <HTMLDivElement>(null)\n    const liRefcity = useRef <HTMLDivElement>(null)\n\n    let counter = 0\n\n    const onMouseEventHandler = (isName: nameDropdown) => {\n        setIsHoverDropdown(isName)\n    }\n    const getCities = (need: need) => {\n        axiosRequests.GET<cityType>(`/api/cities?q=${citiesValue}&need=${need}`)\n        .then(response => setCities(response))\n        .catch(e => console.log(e))\n    }\n    const changeCitiesHandler = async (e: React.ChangeEvent<HTMLInputElement>) => {\n        const inputValue = e.target.value\n        setCitiesValue(inputValue)\n\n        counter = 0\n        clearInterval(intervalId);\n        \n        setIntervalId(setInterval(() => {\n            counter = counter + 0.5\n            if (counter === sendTime) {\n                clearInterval(intervalId);\n                setIsLoading(false)\n                inputValue ? getCities(1) : getCities(0)\n                return\n            }\n            else if(!isLoading){\n                setIsLoading(true)\n            }\n        }, 500));\n\n    }\n\n    useEffect(() => {\n        if(firstCounter === 0){\n            getCities(0)\n            setFirstCounter(firstCounter + 1)\n\n            axiosRequests.GET<HelpItem>(`/api/helps`)\n            .then(response => setHelps(response))\n            .catch(e => console.log(e))\n        }\n        return () => clearInterval(intervalId);\n    }, [intervalId])\n    return (\n        <Nav className='Navbar'>\n            <div className=\"Navbar__wrapper\">\n                <div className=\"logo\"></div>\n                <div className=\"Navlist-Telephone\">\n                    \n                    <ul className=\"Navlist-Telephone__list\">\n\n                        <LinkContainer to=\"/\">\n                            <NavItem className=\"Navlist-Telephone__list__item text-focus-in\">Главная</NavItem>\n                        </LinkContainer>\n\n                        <LinkContainer to=\"/aboutUs\">\n                            <NavItem className=\"Navlist-Telephone__list__item text-focus-in\">О нас</NavItem>\n                        </LinkContainer>\n                        \n      \n                        <NavDropdown\n                            title={\"Помощь\"}\n                            style={{color: \"red\"}}\n                            ref={liRefhelp}\n                            className=\"Navbar-dropdown Navlist-Telephone__list__item_open text-focus-in\"\n                            id=\"basic-nav-dropdown\"\n                        >\n                            <div className=\"Nav-dropdown-content\">\n                                <NavDropdown.Item>Итем1</NavDropdown.Item>\n                                <NavDropdown.Item>Итем2</NavDropdown.Item>\n                                <NavDropdown.Item>Итем3</NavDropdown.Item>\n                                <NavDropdown.Item>Итем4</NavDropdown.Item>\n                            </div>\n                        </NavDropdown>\n                        \n                        <NavDropdown\n                            title={cityTitle}\n                            ref={liRefcity}\n                            onMouseEnter={() => onMouseEventHandler(\"city\")} \n                            onMouseLeave={() => onMouseEventHandler(\"city\")}\n                            onClick={() => onMouseEventHandler(\"city\")}\n                            className=\"Navbar-dropdown Navlist-Telephone__list__item_open text-focus-in\"\n                            id=\"basic-nav-dropdown\"\n                        >\n                            <Form>\n                                <FormControl type=\"text\"\n                                    placeholder='Поиск..'\n                                    className='mr-sm-2'\n                                    spellCheck={false}\n                                    onChange={changeCitiesHandler}\n                                    value={citiesValue}\n                                    style={{\n                                        boxShadow: 'none',\n                                        border: 'none',\n                                        borderBottom: '1px solid black',\n                                        borderBottomLeftRadius:'0px',\n                                        borderBottomRightRadius:'0px'\n                                    }}\n                                />\n                                \n                            </Form>\n                            <div className=\"NavDropItems\"\n                            style={isLoading ? {overflowY: 'hidden', display: 'flex', justifyContent: 'center', alignItems: 'center'}\n                             : {}}\n                            >\n                                {\n                                    !isLoading ?\n                                    cities.map((item: cityType) =>\n                                        <NavDropdown.Item\n                                            onClick={e => setCityTitle(e.currentTarget.innerText)}\n                                        >\n                                            {item.title}\n                                        </NavDropdown.Item>\n                                    )\n                                    :\n                                    <Loader width={84} height={50}/>\n                                }\n                            </div>\n                        </NavDropdown>\n                    </ul>\n                    <h3 className=\"Telephone\">+7 495 967 13 01</h3>\n\n                </div>\n                <Link className=\"Personal-nav\" to='/registration'>\n                    <h5>Личный кабинет</h5>\n                    <div className=\"Personal-nav__icon\"></div>\n                </Link>\n                <div \n                    className=\"Burger-button\"\n                >\n                    <div className=\"Burger-button__el\"></div>\n                    <div className=\"Burger-button__el\"></div>\n                    <div className={'Burger-button__el' + burgerButtonEl}></div>\n                </div>\n               \n            </div>\n        </Nav>\n    );\n};\n\nexport default Navbar;","/home/user/MyLinuxProjects/delolive/frontend/src/components/NewsListBS.tsx",["201","202","203","204"],[],"import React, { FC, useEffect, useState } from 'react';\nimport NewsItemType from '../types/NewsItem';\nimport { Row, Col } from 'react-bootstrap';\nimport NewsItem from './NewsItem';\nimport './styles/NewsListBS/NewsListBS.css'\n\ninterface NewsListBSprops{\n    NewsList: NewsItemType[];\n}\n\nconst NewsListBS:FC<NewsListBSprops> = ({NewsList}) => {\n    return (\n        <div className='NewsListBS'>\n                {   \n                    NewsList.length !== 0 ?\n                    NewsList.map((item: NewsItemType) => \n                        <div className='NewsListBS__item'>\n                            <NewsItem\n                                style={{marginLeft: \"0px\", marginTop: '50px'}}\n                                key={item._id}\n                                image={item.image}\n                                _id={item._id}\n                                date={item.date}\n                                description={item.description}\n                                subDescription={item.subDescription}\n                            />\n                        </div>\n                    )\n                    :\n                    <div className='NoNews'>Список новостей пуст...</div> \n                }\n                \n        </div>\n    );\n};\n\nexport default NewsListBS;","/home/user/MyLinuxProjects/delolive/frontend/src/components/InsuranceComp.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/SpeciesInsurance.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/TriggersList.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/AboutUs.tsx",["205"],[],"import React from 'react';\nimport './styles/AboutUs/AboutUs.css'\nimport Title from './UI/Title/Title';\nimport { selectScroll } from './globalSlices/scroll';\nimport { useSelector } from 'react-redux';\n\nconst AboutUs = () => {\n\n    const scroll = useSelector(selectScroll)\n\n    return (\n        <div className='AboutUs'>\n            <Title hType=\"h1\">немного о нас</Title>\n            <div className=\"AboutUs__content\">\n\n                <div className=\"AboutUs__content__head\">\n                    <div className=\"AboutUs__content__head__wrapper\">\n\n                        <div className=\"AboutUs__content__head__wrapper__block\" data-psevdoText=\">\" id=\"block-cav1\">\n                            <div className=\"AboutUs__content__head__wrapper__block__text\">\n                                380<span className='littleText'>мил.руб.</span>\n                            </div>\n                            <div className=\"AboutUs__content__head__wrapper__block__subtext\">\n                                капитала\n                            </div>\n                        </div>\n\n                        <div className=\"AboutUs__content__head__wrapper__block\" data-psevdoText=\"~\" id=\"block-tilda\">\n                            <div className=\"AboutUs__content__head__wrapper__block__text\">\n                                78\n                            </div>\n                            <div className=\"AboutUs__content__head__wrapper__block__subtext\">\n                                региональных предстравительств\n                            </div>\n                        </div>\n                        \n                        <div className=\"AboutUs__content__head__wrapper__block\" data-psevdoText=\">\" id=\"block-cav\">\n                            <div className=\"AboutUs__content__head__wrapper__block__text\">\n                                20\n                            </div>\n                            <div className=\"AboutUs__content__head__wrapper__block__subtext\">\n                                лет на рынке страховых услуг\n                            </div>\n                        </div>\n                        \n                        <div className=\"AboutUs__content__head__wrapper__block\">\n                            <div className=\"AboutUs__content__head__wrapper__block__text\">\n                                ruВВВ\n                            </div>\n                            <div className=\"AboutUs__content__head__wrapper__block__subtext\">\n                                высокий уровень надежности \n                            </div>\n                        </div>\n                        \n                    </div>\n                    \n                </div>\n                <div className=\"AboutUs__content__foot\">\n                   <div className=\"AboutUs__content__foot__img-cont\" id=\"foot-image1\"></div>\n                   <div className=\"AboutUs__content__foot__img-cont\" id=\"foot-image2\"></div>\n                   <div className=\"AboutUs__content__foot__img-cont\" id=\"foot-image3\"></div>\n                   <div className=\"AboutUs__content__foot__img-cont\" id=\"foot-image4\"></div>\n                   <div className=\"AboutUs__content__foot__img-cont\" id=\"foot-image5\"></div>\n                   <div className=\"AboutUs__content__foot__img-cont\" id=\"foot-image6\"></div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AboutUs;","/home/user/MyLinuxProjects/delolive/frontend/src/classes/axiosRequests.ts",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/News.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/SpecialOffers.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/RegistrationForm.tsx",["206","207"],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/UsefulButtons.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/UI/Loader/Loader.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/UI/Button/Button.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/NewsItem.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/InsuranceProg.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/Trigger.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/NewsSlider.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/NewsWithoutSlider.tsx",["208","209","210"],[],"import React, { FC, useEffect, useState } from 'react';\nimport NewsItem from './NewsItem';\nimport NewsItemType from '../types/NewsItem';\nimport './styles/NewsWithoutSlider/NewsWithoutSlider.css'\nimport Title from './UI/Title/Title';\nimport Button, { ButtonBorderVariant, ButtonTextVariant } from './UI/Button/Button';\nimport axiosRequests from '../classes/axiosRequests';\nimport { Link } from 'react-router-dom';\n\ninterface NewsWithoutSliderProps{\n    NewsList: NewsItemType[];\n}\n\nconst NewsWithoutSlider: FC<NewsWithoutSliderProps> = ({NewsList}) => {\n    \n    return (\n        <div className='NewsWithoutSlider'>\n            <div className=\"NewsList\">\n                {\n                    NewsList.length !== 0 ?\n                    NewsList.slice(0, 3).map((item: NewsItemType, index: number) =>\n                     <NewsItem\n                        _id={item._id}\n                        key={index + 1}\n                        date={item.date}\n                        description={item.description}\n                        image={item.image}\n                        subDescription={item?.subDescription}\n                    />\n                    )\n                    :\n                    <div className='NoNews'>\n                        <Title hType='h3'>Список новостей пуст....</Title>\n                    </div>\n                }\n            </div>\n            {\n                NewsList.length > 3 ?\n                <div className=\"buttonCont\">\n                    <Link to='/news' style={{textDecoration:\"none\"}}>\n                        <Button\n                            text='Смотреть все  -->'\n                            variantBorder={ButtonBorderVariant.black}\n                            variantText={ButtonTextVariant.black}\n                            height={50}\n                            width={265}\n                            margintop={38}\n                        />\n                    </Link>\n                </div>\n                :\n                <div></div>\n            }\n        </div>\n    );\n};\n\nexport default NewsWithoutSlider;","/home/user/MyLinuxProjects/delolive/frontend/src/components/OffersItem.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/UI/Title/Title.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/UI/FormInput/FormInput.tsx",["211","212","213","214"],[],"import React, { FC, useEffect, useState } from 'react';\nimport ValidationType from '../../../types/Validation';\nimport './FormInput.css'\nimport { useDate } from '../../../hooks/useDate'\nimport { selectValid, selectUserData, setIsSetPassword, setPassword, setPasswordUpdate, setUserData } from '../../globalSlices/registrationSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { varUserModel } from '../../../types/UserModel';\ninterface FormInputProps{\n    field: varUserModel;\n    placeholder: string;\n    title: string;\n    errorMessage?: string;\n    isPassword?: boolean;\n    isInfo?: boolean;\n    isTel?: boolean;\n    checkPassword?: boolean;\n    validation?: ValidationType;\n    date?: boolean;\n    width?: 'normal' | 'small' | 'large';\n    indexOne?: true;\n    inputType?: string;\n}\n\nconst FormInput: FC<FormInputProps> = ({\n    field,\n    placeholder,\n    isTel = false,\n    title,\n    checkPassword = false,\n    errorMessage,\n    validation = {\n        minLength: 1,\n        maxLength: 100,\n\n    },\n    isPassword = false,\n    isInfo = false,\n    width = 'normal',\n    indexOne = false,\n    date = false,\n    inputType = \"text\"\n}) => {\n    const dispatch = useDispatch()\n    const selectedReg = useSelector(selectValid)\n    const userDateRedux = useSelector(selectUserData)\n    const checkPasswordDate = useSelector(setPassword)\n\n    const [passwordShow, setPasswordShow] = useState <boolean>(true)\n    const [counterSend, setCounterSend] = useState <number>(0)\n    const [isError, setIsError] = useState <boolean>(false)\n    const [ErrorMsg, setErrorMsg] = useState <string>('')\n    const [inputWidth, setInputWidth] = useState <number>(0)\n    const [marginTop, setMarginTop] = useState <number>(0)\n    const [telNum, setTelNum] = useState <string>('+7 (___) ___-__-_')\n    const [inputText, setInputText] = useState <string>('')\n    const [inputDate, setInputDate] = useState <string>(useDate())\n\n    const [sendTime, setSendTime] = useState <number>(1);\n    const [intervalId, setIntervalId] = useState <any>(null);\n\n    const passwordShowHandler = () => {\n        if(passwordShow){\n            setPasswordShow(false)\n            return\n        }\n        setPasswordShow(true)\n    }\n\n    const createErrorMsg = (msg: string) => {\n        setIsError(true)\n        setErrorMsg(msg)\n    }\n\n    const checkValid = (): boolean => {\n        let valid: boolean = false\n        let currentText;\n\n        if(date) currentText = inputDate\n        else if(isTel) currentText = telNum\n        else currentText = inputText\n\n        if(field === 'none') return false\n        if(validation.minLength <= currentText.length || isTel){\n            if(validation.maxLength >= currentText.length || isTel){\n                if(field !== 'birthdate' && field !== 'card' && field !== 'telephone' && field !== 'password' && field !== 'check'){\n                    currentText = currentText.trim()\n                    if (!/\\s/g.test(currentText)){\n                        setIsError(false)\n                        return true\n                    }\n                    else{\n                        createErrorMsg('Это поле не должно содержать знак пробела')\n                    }\n                }\n                else{\n                    if(isTel){\n                        if(currentText[0] === '+'){\n                            let newCT = currentText.substring(1)\n                            let newNewCT = newCT.replace('7','8');\n                            currentText = newNewCT\n                        }\n                        currentText = currentText.replaceAll(' ', '')\n                        currentText = currentText.replaceAll('-', '')\n                        currentText = currentText.replace('(', '')\n                        currentText = currentText.replace(')', '')\n                        \n                        if(validation.minLength < currentText.length){\n                            if(validation.maxLength >= currentText.length){\n                                setIsError(false)\n                                return true\n                            }\n                            else{\n                                createErrorMsg('Максимальное кол-во символов для этого поля - ' + String(validation.maxLength))\n                            }\n                        }\n                        else{\n                            createErrorMsg('Минимальное кол-во символов для этого поля - ' + String(validation.minLength))\n                        }\n                    }\n                    else if(isPassword){\n                        if(!/\\s/g.test(currentText) && !/-/g.test(currentText) && !/\\//g.test(currentText)){\n                            setIsError(false)\n                            return true\n                        }\n                        else{\n                            createErrorMsg('Пароль не должен содержать символов: \"пробел\" , \"/\" , \"/\"')\n                        }\n                    }\n                    else if(checkPassword){\n                        if(checkPasswordDate === inputText){\n                            setIsError(false)\n                            dispatch(setIsSetPassword(true))\n                            return true\n                        }\n                        else{\n                            createErrorMsg('Пароли не совпадают')\n                        }\n                    }\n                    else if(field === 'birthdate'){\n                        setIsError(false)\n                        return true\n                    }\n\n                    else if(field === 'card'){\n                        setIsError(false)\n                        return true\n                    }\n                    \n                }\n            }\n            else{\n                createErrorMsg('Максимальное кол-во символов для этого поля - ' + String(validation.maxLength))\n            }\n        }\n        else{\n            createErrorMsg('Минимальное кол-во символов для этого поля - ' + String(validation.minLength))\n        }\n        return valid\n    }\n    const sendData = () => {\n        let dataValue;\n\n        if(date) dataValue = inputDate\n        else if(isTel) dataValue = telNum\n        else dataValue = inputText\n        const valid: boolean = checkValid()\n\n        if(isTel){\n            if(dataValue[0] === '+'){\n                let newCT = dataValue.substring(1)\n                let newNewCT = newCT.replace('7','8');\n                dataValue = newNewCT\n            }\n            dataValue = dataValue.replaceAll(' ', '')\n            dataValue = dataValue.replaceAll('-', '')\n            dataValue = dataValue.replace('(', '')\n            dataValue = dataValue.replace(')', '')\n        }\n        if(!valid){\n            if(isTel) setTelNum('+7 (___) ___-__-_')\n            else setInputText('')\n        }\n\n        if(field !== 'none' && valid){\n            dispatch(setUserData({[field]: dataValue}))\n        }\n    }\n    let counter = 0\n    const inputHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n        let inputValue: string = e.target.value\n        setInputText(inputValue)\n    }\n    const passwordHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n        let inputValue: string = e.target.value\n        counter = 0\n        clearInterval(intervalId);\n\n        setIntervalId(setInterval(() => {\n            counter = counter + 0.5\n            if (counter === sendTime) {\n                dispatch(setPasswordUpdate(inputValue))\n                clearInterval(intervalId);\n                return\n            }\n        }, 500));\n        setInputText(inputValue)\n\n    }\n    const dateHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n        let inputValue: string = e.target.value\n        setInputDate(inputValue)\n    }\n    const telNumHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n        let inputValue: string = e.target.value\n\n        if(inputValue.length - 1 < 18 && Number(inputValue[inputValue.length - 1]) >= 0){\n            let copyInputValue: string[] = inputValue.split('')\n            copyInputValue.every((cv, i, arr) => {\n                if(cv === '_') {\n                    arr[i] = inputValue[inputValue.length - 1]\n                    arr[inputValue.length - 1] = ''\n                    return false\n                }\n                else return true\n            })\n\n            let newVal: string = copyInputValue.join('')\n            setTelNum(newVal)\n        }\n        else{\n            setTelNum(inputValue)\n        }\n\n    }\n    const getMarginTop = () => {\n        if(!indexOne){\n            if(isError){\n                setMarginTop(29)\n            }\n            else{\n                setMarginTop(53)\n            }\n        }\n    }\n    const getInputType = () => {\n        if(isPassword){\n            if(passwordShow) return 'password'\n            else return inputType\n        }\n        else if(date) return 'date'\n        else return inputType\n    }\n    \n    const getInputValue = () => {\n        if(isTel) return telNum\n        else if(date) return inputDate\n        else return inputText\n    }\n    const getWidth = () => {\n        if(inputWidth === 0){\n            let decrementWidth = 0\n            if(isPassword){\n                decrementWidth = 20\n            }\n            switch(width){\n                case 'normal':\n                    setInputWidth(265 - decrementWidth)\n                    break\n                case 'small':\n                    setInputWidth(165 - decrementWidth)\n                    break\n                case 'large':\n                    setInputWidth(365 - decrementWidth)\n                    break\n            }\n        }\n    }\n\n    useEffect(() => {\n        getWidth()\n        getMarginTop()\n    }, [])\n    useEffect(() => {\n        if(counterSend !== 0){\n            sendData()\n        }\n        setCounterSend(1)\n    }, [selectedReg])\n    return (\n        <div className='FormInput' style={{marginTop: marginTop}}   >\n            <div className=\"FormInput__title\">{title}</div>\n            <div \n            style={{display: isPassword ? 'flex' : 'block', alignItems: 'center', maxWidth: inputWidth + 30}}\n            className={isError ? 'FormInput__bar_error' : 'FormInput__bar'}>\n                <input\n                style={{width: inputWidth}}\n                type={getInputType()}\n                onChange={isTel ? telNumHandler : date ? dateHandler : isPassword ? passwordHandler : inputHandler}\n                value={getInputValue()}\n                autoComplete='new-password'\n                className='FormInput_input'\n                placeholder={isTel ? '+7(___)__-__-__' : placeholder}\n                />\n                {\n                    isPassword ? \n                    <div\n                    className={passwordShow ? 'password_show' : 'password_hide'}\n                    onClick={passwordShowHandler}\n                    ></div>\n                    :\n                    <div></div>\n                }\n                {\n                    isInfo ?\n                    <div className='info'></div>\n                    :\n                    <div></div>\n                }\n            </div>\n            {\n                isError ?\n                errorMessage\n                    ? \n                        <div className='FormInput__errorMessage' style={{maxWidth: inputWidth}}>{errorMessage}</div>\n                    :\n                        <div className='FormInput__errorMessage' style={{maxWidth: inputWidth}}>{ErrorMsg}</div>\n                :\n                <div></div>\n            }\n        </div>\n    );\n};\n\nexport default FormInput;","/home/user/MyLinuxProjects/delolive/frontend/src/hooks/useSizes.ts",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/UI/subDescription/SubDescriptionEl.tsx",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/hooks/useDate.ts",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/components/globalSlices/authSlice.ts",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/services/AuthService.ts",[],[],"/home/user/MyLinuxProjects/delolive/frontend/src/http/index.ts",[],[],{"ruleId":"215","severity":1,"message":"216","line":14,"column":25,"nodeType":"217","messageId":"218","endLine":14,"endColumn":27},{"ruleId":"219","severity":1,"message":"220","line":1,"column":46,"nodeType":"221","messageId":"222","endLine":1,"endColumn":64},{"ruleId":"219","severity":1,"message":"223","line":24,"column":12,"nodeType":"221","messageId":"222","endLine":24,"endColumn":17},{"ruleId":"219","severity":1,"message":"224","line":26,"column":12,"nodeType":"221","messageId":"222","endLine":26,"endColumn":27},{"ruleId":"219","severity":1,"message":"225","line":27,"column":28,"nodeType":"221","messageId":"222","endLine":27,"endColumn":45},{"ruleId":"219","severity":1,"message":"226","line":31,"column":22,"nodeType":"221","messageId":"222","endLine":31,"endColumn":33},{"ruleId":"227","severity":1,"message":"228","line":80,"column":8,"nodeType":"229","endLine":80,"endColumn":20,"suggestions":"230"},{"ruleId":"219","severity":1,"message":"231","line":1,"column":21,"nodeType":"221","messageId":"222","endLine":1,"endColumn":30},{"ruleId":"219","severity":1,"message":"232","line":1,"column":32,"nodeType":"221","messageId":"222","endLine":1,"endColumn":40},{"ruleId":"219","severity":1,"message":"233","line":3,"column":10,"nodeType":"221","messageId":"222","endLine":3,"endColumn":13},{"ruleId":"219","severity":1,"message":"234","line":3,"column":15,"nodeType":"221","messageId":"222","endLine":3,"endColumn":18},{"ruleId":"219","severity":1,"message":"235","line":9,"column":11,"nodeType":"221","messageId":"222","endLine":9,"endColumn":17},{"ruleId":"219","severity":1,"message":"236","line":7,"column":38,"nodeType":"221","messageId":"222","endLine":7,"endColumn":53},{"ruleId":"227","severity":1,"message":"237","line":67,"column":8,"nodeType":"229","endLine":67,"endColumn":15,"suggestions":"238"},{"ruleId":"219","severity":1,"message":"231","line":1,"column":21,"nodeType":"221","messageId":"222","endLine":1,"endColumn":30},{"ruleId":"219","severity":1,"message":"232","line":1,"column":32,"nodeType":"221","messageId":"222","endLine":1,"endColumn":40},{"ruleId":"219","severity":1,"message":"239","line":7,"column":8,"nodeType":"221","messageId":"222","endLine":7,"endColumn":21},{"ruleId":"219","severity":1,"message":"240","line":45,"column":11,"nodeType":"221","messageId":"222","endLine":45,"endColumn":24},{"ruleId":"219","severity":1,"message":"226","line":58,"column":22,"nodeType":"221","messageId":"222","endLine":58,"endColumn":33},{"ruleId":"227","severity":1,"message":"241","line":282,"column":8,"nodeType":"229","endLine":282,"endColumn":10,"suggestions":"242"},{"ruleId":"227","severity":1,"message":"243","line":288,"column":8,"nodeType":"229","endLine":288,"endColumn":21,"suggestions":"244"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'ChangeEventHandler' is defined but never used.","Identifier","unusedVar","'helps' is assigned a value but never used.","'isHoverDropdown' is assigned a value but never used.","'setburgerButtonEl' is assigned a value but never used.","'setSendTime' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'firstCounter' and 'getCities'. Either include them or remove the dependency array. You can also do a functional update 'setFirstCounter(f => ...)' if you only need 'firstCounter' in the 'setFirstCounter' call.","ArrayExpression",["245"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'scroll' is assigned a value but never used.","'selectIsLoading' is defined but never used.","React Hook useEffect has a missing dependency: 'sendALLData'. Either include it or remove the dependency array.",["246"],"'axiosRequests' is defined but never used.","'userDateRedux' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getMarginTop' and 'getWidth'. Either include them or remove the dependency array.",["247"],"React Hook useEffect has missing dependencies: 'counterSend' and 'sendData'. Either include them or remove the dependency array.",["248"],{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},"Update the dependencies array to be: [firstCounter, getCities, intervalId]",{"range":"257","text":"258"},"Update the dependencies array to be: [isReg, sendALLData]",{"range":"259","text":"260"},"Update the dependencies array to be: [getMarginTop, getWidth]",{"range":"261","text":"262"},"Update the dependencies array to be: [counterSend, selectedReg, sendData]",{"range":"263","text":"264"},[2730,2742],"[firstCounter, getCities, intervalId]",[2300,2307],"[isReg, sendALLData]",[9689,9691],"[getMarginTop, getWidth]",[9812,9825],"[counterSend, selectedReg, sendData]"]