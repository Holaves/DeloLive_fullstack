{"ast":null,"code":"var _jsxFileName = \"/home/user/MyLinuxProjects/delolive/frontend/src/components/UI/FormInput/FormInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './FormInput.css';\nimport { useDate } from '../../../hooks/useDate';\nimport { selectReg, selectUserData, setUserData } from '../../globalSlices/registrationSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormInput = _ref => {\n  _s();\n  let {\n    field,\n    placeholder,\n    isTel = false,\n    title,\n    errorMessage,\n    isPassword = false,\n    isInfo = false,\n    width = 'normal',\n    indexOne = false,\n    date = false,\n    inputType = \"text\"\n  } = _ref;\n  const dispatch = useDispatch();\n  const selectedReg = useSelector(selectReg);\n  const c = useSelector(selectUserData);\n  let counterSend = 0;\n  const [passwordShow, setPasswordShow] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [inputWidth, setInputWidth] = useState(0);\n  const [marginTop, setMarginTop] = useState(0);\n  const [telNum, setTelNum] = useState('+7 (___) ___-__-_');\n  const [inputText, setInputText] = useState('');\n  const [inputDate, setInputDate] = useState(useDate());\n  const passwordShowHandler = () => {\n    if (passwordShow) {\n      setPasswordShow(false);\n      return;\n    }\n    setPasswordShow(true);\n  };\n  const checkValid = () => {};\n  const sendData = () => {\n    let dataValue;\n    if (date) dataValue = inputDate;else if (isTel) dataValue = telNum;else dataValue = inputText;\n    if (field !== 'none') {\n      dispatch(setUserData({\n        [field]: dataValue\n      }));\n      console.log(c);\n    }\n  };\n  const inputHandler = e => {\n    let inputValue = e.target.value;\n    setInputText(inputValue);\n  };\n  const dateHandler = e => {\n    let inputValue = e.target.value;\n    setInputDate(inputValue);\n  };\n  const telNumHandler = e => {\n    let inputValue = e.target.value;\n    if (inputValue.length - 1 < 18 && Number(inputValue[inputValue.length - 1]) >= 0) {\n      let copyInputValue = inputValue.split('');\n      copyInputValue.every((cv, i, arr) => {\n        if (cv === '_') {\n          arr[i] = inputValue[inputValue.length - 1];\n          arr[inputValue.length - 1] = '';\n          return false;\n        } else return true;\n      });\n      let newVal = copyInputValue.join('');\n      setTelNum(newVal);\n    } else {\n      setTelNum(inputValue);\n    }\n  };\n  const getMarginTop = () => {\n    if (!indexOne) {\n      if (isError) {\n        setMarginTop(29);\n      } else {\n        setMarginTop(53);\n      }\n    }\n  };\n  const getInputType = () => {\n    if (isPassword) {\n      if (passwordShow) return 'password';else return inputType;\n    } else if (date) return 'date';else return inputType;\n  };\n  const getInputValue = () => {\n    if (isTel) return telNum;else if (date) return inputDate;else return inputText;\n  };\n  const getWidth = () => {\n    if (inputWidth === 0) {\n      let decrementWidth = 0;\n      if (isPassword) {\n        decrementWidth = 20;\n      }\n      switch (width) {\n        case 'normal':\n          setInputWidth(265 - decrementWidth);\n          break;\n        case 'small':\n          setInputWidth(165 - decrementWidth);\n          break;\n        case 'large':\n          setInputWidth(365 - decrementWidth);\n          break;\n      }\n    }\n  };\n  useEffect(() => {\n    getWidth();\n    getMarginTop();\n  }, []);\n  useEffect(() => {\n    if (counterSend !== 0) {\n      sendData();\n    }\n    counterSend++;\n  }, [selectedReg]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"FormInput\",\n    style: {\n      marginTop: marginTop\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FormInput__title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: isPassword ? 'flex' : 'block',\n        alignItems: 'center'\n      },\n      className: isError ? 'FormInput__bar_error' : 'FormInput__bar',\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          width: inputWidth\n        },\n        type: getInputType(),\n        onChange: isTel ? telNumHandler : date ? dateHandler : inputHandler,\n        value: getInputValue(),\n        className: \"FormInput_input\",\n        placeholder: isTel ? '+7(___)__-__-__' : placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), isPassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: passwordShow ? 'password_show' : 'password_hide',\n        onClick: passwordShowHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this), isInfo ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), isError ? errorMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FormInput__errorMessage\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FormInput__errorMessage\",\n      children: 'Введите' + title.toLowerCase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n};\n_s(FormInput, \"/J/by3yWA9RqH/6c3BnkpCLpw4E=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useDate];\n});\n_c = FormInput;\nexport default FormInput;\nvar _c;\n$RefreshReg$(_c, \"FormInput\");","map":{"version":3,"names":["React","useEffect","useState","useDate","selectReg","selectUserData","setUserData","useDispatch","useSelector","FormInput","field","placeholder","isTel","title","errorMessage","isPassword","isInfo","width","indexOne","date","inputType","dispatch","selectedReg","c","counterSend","passwordShow","setPasswordShow","isError","setIsError","inputWidth","setInputWidth","marginTop","setMarginTop","telNum","setTelNum","inputText","setInputText","inputDate","setInputDate","passwordShowHandler","checkValid","sendData","dataValue","console","log","inputHandler","e","inputValue","target","value","dateHandler","telNumHandler","length","Number","copyInputValue","split","every","cv","i","arr","newVal","join","getMarginTop","getInputType","getInputValue","getWidth","decrementWidth","display","alignItems","toLowerCase"],"sources":["/home/user/MyLinuxProjects/delolive/frontend/src/components/UI/FormInput/FormInput.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from 'react';\nimport ValidationType from '../../../types/Validation';\nimport './FormInput.css'\nimport { useDate } from '../../../hooks/useDate'\nimport { selectReg, selectUserData, setUserData } from '../../globalSlices/registrationSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { varCreateUser } from '../../../types/createUser';\ninterface FormInputProps{\n    field: varCreateUser;\n    placeholder: string;\n    title: string;\n    errorMessage?: string;\n    isPassword?: boolean;\n    isInfo?: boolean;\n    isTel?: boolean;\n    validation?: ValidationType;\n    date?: boolean;\n    width?: 'normal' | 'small' | 'large';\n    indexOne?: true;\n    inputType?: string;\n}\n\nconst FormInput: FC<FormInputProps> = ({\n    field,\n    placeholder,\n    isTel = false,\n    title,\n    errorMessage,\n    isPassword = false,\n    isInfo = false,\n    width = 'normal',\n    indexOne = false,\n    date = false,\n    inputType = \"text\"\n}) => {\n    const dispatch = useDispatch()\n    const selectedReg = useSelector(selectReg)\n    const c = useSelector(selectUserData)\n    let counterSend = 0\n\n    const [passwordShow, setPasswordShow] = useState <boolean>(true)\n    const [isError, setIsError] = useState <boolean>(false)\n    const [inputWidth, setInputWidth] = useState <number>(0)\n    const [marginTop, setMarginTop] = useState <number>(0)\n    const [telNum, setTelNum] = useState <string>('+7 (___) ___-__-_')\n    const [inputText, setInputText] = useState <string>('')\n    const [inputDate, setInputDate] = useState <string>(useDate())\n\n    const passwordShowHandler = () => {\n        if(passwordShow){\n            setPasswordShow(false)\n            return\n        }\n        setPasswordShow(true)\n    }\n\n    const checkValid = () => {}\n    const sendData = () => {\n        let dataValue;\n\n        if(date) dataValue = inputDate\n        else if(isTel) dataValue = telNum\n        else dataValue = inputText\n\n        if(field !== 'none'){\n            dispatch(setUserData({[field]: dataValue}))\n            console.log(c)\n        }\n    }\n    const inputHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n        let inputValue: string = e.target.value\n        setInputText(inputValue)\n    }\n    const dateHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n        let inputValue: string = e.target.value\n        setInputDate(inputValue)\n    }\n    const telNumHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n        let inputValue: string = e.target.value\n\n        if(inputValue.length - 1 < 18 && Number(inputValue[inputValue.length - 1]) >= 0){\n            let copyInputValue: string[] = inputValue.split('')\n            copyInputValue.every((cv, i, arr) => {\n                if(cv === '_') {\n                    arr[i] = inputValue[inputValue.length - 1]\n                    arr[inputValue.length - 1] = ''\n                    return false\n                }\n                else return true\n            })\n\n            let newVal: string = copyInputValue.join('')\n            setTelNum(newVal)\n        }\n        else{\n            setTelNum(inputValue)\n        }\n\n    }\n    const getMarginTop = () => {\n        if(!indexOne){\n            if(isError){\n                setMarginTop(29)\n            }\n            else{\n                setMarginTop(53)\n            }\n        }\n    }\n    const getInputType = () => {\n        if(isPassword){\n            if(passwordShow) return 'password'\n            else return inputType\n        }\n        else if(date) return 'date'\n        else return inputType\n    }\n    \n    const getInputValue = () => {\n        if(isTel) return telNum\n        else if(date) return inputDate\n        else return inputText\n    }\n    const getWidth = () => {\n        if(inputWidth === 0){\n            let decrementWidth = 0\n            if(isPassword){\n                decrementWidth = 20\n            }\n            switch(width){\n                case 'normal':\n                    setInputWidth(265 - decrementWidth)\n                    break\n                case 'small':\n                    setInputWidth(165 - decrementWidth)\n                    break\n                case 'large':\n                    setInputWidth(365 - decrementWidth)\n                    break\n            }\n        }\n    }\n\n    useEffect(() => {\n        getWidth()\n        getMarginTop()\n    }, [])\n    useEffect(() => {\n        if(counterSend !== 0){\n            sendData()\n        }\n        counterSend++\n    }, [selectedReg])\n    return (\n        <div className='FormInput' style={{marginTop: marginTop}}   >\n            <div className=\"FormInput__title\">{title}</div>\n            <div \n            style={{display: isPassword ? 'flex' : 'block', alignItems: 'center'}}\n            className={isError ? 'FormInput__bar_error' : 'FormInput__bar'}>\n                <input\n                style={{width: inputWidth}}\n                type={getInputType()}\n                onChange={isTel ? telNumHandler : date ? dateHandler : inputHandler}\n                value={getInputValue()}\n                className='FormInput_input'\n                placeholder={isTel ? '+7(___)__-__-__' : placeholder}\n                />\n                {\n                    isPassword ? \n                    <div\n                    className={passwordShow ? 'password_show' : 'password_hide'}\n                    onClick={passwordShowHandler}\n                    ></div>\n                    :\n                    <div></div>\n                }\n                {\n                    isInfo ?\n                    <div className='info'></div>\n                    :\n                    <div></div>\n                }\n            </div>\n            {\n                isError ?\n                errorMessage \n                    ? \n                        <div className='FormInput__errorMessage'>{errorMessage}</div>\n                    :\n                        <div className='FormInput__errorMessage'>{'Введите' + title.toLowerCase}</div>\n                :\n                <div></div>\n            }\n        </div>\n    );\n};\n\nexport default FormInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}