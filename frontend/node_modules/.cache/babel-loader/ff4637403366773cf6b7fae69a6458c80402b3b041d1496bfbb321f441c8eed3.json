{"ast":null,"code":"var _jsxFileName = \"/home/user/MyLinuxProjects/dl-comp/src/components/Trigger.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Trigger.css';\nimport Button, { ButtonBorderVariant, ButtonTextVariant } from './UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Trigger = _ref => {\n  _s();\n  let {\n    imgPath,\n    title,\n    buttonText\n  } = _ref;\n  const [isHover, setIsHover] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Trigger\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Trigger__title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Trigger__image-cont\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imgPath,\n        alt: \"f\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        height: 50,\n        width: 255,\n        children: \"buttonText\",\n        variantBorder: ButtonBorderVariant.black,\n        variantText: ButtonTextVariant.black\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(Trigger, \"FTC8EpIspi2qaDtU9gFRhqZT02A=\");\n_c = Trigger;\nexport default Trigger;\nvar _c;\n$RefreshReg$(_c, \"Trigger\");","map":{"version":3,"names":["React","useState","Button","ButtonBorderVariant","ButtonTextVariant","Trigger","imgPath","title","buttonText","isHover","setIsHover","black"],"sources":["/home/user/MyLinuxProjects/dl-comp/src/components/Trigger.tsx"],"sourcesContent":["import React, { FC, useState } from 'react';\nimport './Trigger.css'\nimport Button, { ButtonBorderVariant, ButtonTextVariant } from './UI/Button/Button';\n\ninterface TriggerProps{\n    imgPath: string;\n    title: string;\n    buttonText: string;\n}\n\nconst Trigger: FC<TriggerProps> = ({imgPath, title, buttonText}) => {\n    const [isHover, setIsHover] = useState(false)\n    return (\n        <div className='Trigger'>\n            <h1 className=\"Trigger__title\">{title}</h1>\n            <div className=\"Trigger__image-cont\">\n                <img src={imgPath} alt=\"f\" />   \n            </div>\n            <div className=\"buttons\">\n                <Button \n                    height={50}\n                    width={255}\n                    children = 'buttonText' \n                    variantBorder={ButtonBorderVariant.black}\n                    variantText={ButtonTextVariant.black}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Trigger;"],"mappings":";;AAAA,OAAOA,KAAK,IAAQC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,eAAe;AACtB,OAAOC,MAAM,IAAIC,mBAAmB,EAAEC,iBAAiB,QAAQ,oBAAoB;AAAC;AAQpF,MAAMC,OAAyB,GAAG,QAAkC;EAAA;EAAA,IAAjC;IAACC,OAAO;IAAEC,KAAK;IAAEC;EAAU,CAAC;EAC3D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,oBACI;IAAK,SAAS,EAAC,SAAS;IAAA,wBACpB;MAAI,SAAS,EAAC,gBAAgB;MAAA,UAAEM;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eAC3C;MAAK,SAAS,EAAC,qBAAqB;MAAA,uBAChC;QAAK,GAAG,EAAED,OAAQ;QAAC,GAAG,EAAC;MAAG;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC3B,eACN;MAAK,SAAS,EAAC,SAAS;MAAA,uBACpB,QAAC,MAAM;QACH,MAAM,EAAE,EAAG;QACX,KAAK,EAAE,GAAI;QACX,QAAQ,EAAG,YAAY;QACvB,aAAa,EAAEH,mBAAmB,CAACQ,KAAM;QACzC,WAAW,EAAEP,iBAAiB,CAACO;MAAM;QAAA;QAAA;QAAA;MAAA;IACvC;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAC,GAnBIN,OAAyB;AAAA,KAAzBA,OAAyB;AAqB/B,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}