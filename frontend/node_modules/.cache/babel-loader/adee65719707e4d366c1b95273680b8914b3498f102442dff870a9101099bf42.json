{"ast":null,"code":"var _jsxFileName = \"/home/user/MyLinuxProjects/dl-comp/src/components/UI/Button/Button.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let ButtonBorderVariant;\n(function (ButtonBorderVariant) {\n  ButtonBorderVariant[\"dirty\"] = \"dirty\";\n  ButtonBorderVariant[\"black\"] = \"black\";\n})(ButtonBorderVariant || (ButtonBorderVariant = {}));\nexport let ButtonTextVariant;\n(function (ButtonTextVariant) {\n  ButtonTextVariant[\"black\"] = \"black\";\n  ButtonTextVariant[\"dirty\"] = \"dirty\";\n})(ButtonTextVariant || (ButtonTextVariant = {}));\nconst Button = _ref => {\n  let {\n    onClick,\n    height,\n    variantBorder,\n    variantText,\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => onClick,\n    style: {\n      height: height\n    },\n    className: variantBorder === ButtonBorderVariant.dirty ? 'dirtyBorder' : 'blackBorder',\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: variantText === ButtonTextVariant.dirty ? 'dirtyText' : 'blackText',\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","ButtonBorderVariant","ButtonTextVariant","Button","onClick","height","variantBorder","variantText","children","dirty"],"sources":["/home/user/MyLinuxProjects/dl-comp/src/components/UI/Button/Button.tsx"],"sourcesContent":["import React, { FC } from 'react';\n\nexport enum ButtonBorderVariant {\n    dirty = 'dirty',\n    black = 'black'\n}\nexport enum ButtonTextVariant {\n    black = 'black',\n    dirty = 'dirty'\n}\n\ninterface ButtonProps{\n    children: any;\n    height?: number;\n    variantBorder: ButtonBorderVariant;\n    variantText: ButtonTextVariant;\n    onClick?: () => void;\n}\n\nconst Button: FC<ButtonProps> = ({onClick, height, variantBorder, variantText, children}) => {\n    return (\n        <div\n            onClick={() => onClick}\n            style={{height: height}}\n            className={variantBorder === ButtonBorderVariant.dirty ? 'dirtyBorder' : 'blackBorder'}\n        >\n            <h2\n                className={variantText === ButtonTextVariant.dirty ? 'dirtyText' : 'blackText'}\n            >\n                {children}\n            </h2>\n        </div>\n    );\n};\n\nexport default Button;"],"mappings":";AAAA,OAAOA,KAAK,MAAc,OAAO;AAAC;AAElC,WAAYC,mBAAmB;AAG9B,WAHWA,mBAAmB;EAAnBA,mBAAmB;EAAnBA,mBAAmB;AAAA,GAAnBA,mBAAmB,KAAnBA,mBAAmB;AAI/B,WAAYC,iBAAiB;AAG5B,WAHWA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;AAAA,GAAjBA,iBAAiB,KAAjBA,iBAAiB;AAa7B,MAAMC,MAAuB,GAAG,QAA6D;EAAA,IAA5D;IAACC,OAAO;IAAEC,MAAM;IAAEC,aAAa;IAAEC,WAAW;IAAEC;EAAQ,CAAC;EACpF,oBACI;IACI,OAAO,EAAE,MAAMJ,OAAQ;IACvB,KAAK,EAAE;MAACC,MAAM,EAAEA;IAAM,CAAE;IACxB,SAAS,EAAEC,aAAa,KAAKL,mBAAmB,CAACQ,KAAK,GAAG,aAAa,GAAG,aAAc;IAAA,uBAEvF;MACI,SAAS,EAAEF,WAAW,KAAKL,iBAAiB,CAACO,KAAK,GAAG,WAAW,GAAG,WAAY;MAAA,UAE9ED;IAAQ;MAAA;MAAA;MAAA;IAAA;EACR;IAAA;IAAA;IAAA;EAAA,QACH;AAEd,CAAC;AAAC,KAdIL,MAAuB;AAgB7B,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}