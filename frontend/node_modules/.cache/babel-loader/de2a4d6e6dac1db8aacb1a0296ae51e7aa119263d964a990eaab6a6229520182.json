{"ast":null,"code":"var _jsxFileName = \"/home/user/MyLinuxProjects/delolive/frontend/src/components/NewsListBS.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport NewsItem from './NewsItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewsListBS = _ref => {\n  _s();\n  let {\n    NewsList\n  } = _ref;\n  const [cols, setCols] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"NewsListBS\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: NewsList.length !== 0 ? NewsList.slice(0, NewsList.length / 3).map((item, index) => {\n        const sliceElements = 3;\n        let counter = 0;\n        let ret = /*#__PURE__*/_jsxDEV(Row, {\n          children: NewsList.slice(sliceElements).map((item, index) => /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(NewsItem, {\n              style: {\n                marginLeft: \"0px\"\n              },\n              image: item.image,\n              _id: item._id,\n              date: item.date,\n              description: item.description,\n              subDescription: item.subDescription\n            }, item._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this);\n        return ret;\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"NoNews\",\n        children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0435\\u0439 \\u043F\\u0443\\u0441\\u0442...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(NewsListBS, \"InWI5HfpkiIQ5fUESF1SLOOoPw0=\");\n_c = NewsListBS;\nexport default NewsListBS;\nvar _c;\n$RefreshReg$(_c, \"NewsListBS\");","map":{"version":3,"names":["React","useState","Row","Col","NewsItem","NewsListBS","NewsList","cols","setCols","length","slice","map","item","index","sliceElements","counter","ret","marginLeft","image","_id","date","description","subDescription"],"sources":["/home/user/MyLinuxProjects/delolive/frontend/src/components/NewsListBS.tsx"],"sourcesContent":["import React, { FC, useState } from 'react';\nimport NewsItemType from '../types/NewsItem';\nimport { Row, Col } from 'react-bootstrap';\nimport NewsItem from './NewsItem';\n\ninterface NewsListBSprops{\n    NewsList: NewsItemType[];\n}\n\nconst NewsListBS:FC<NewsListBSprops> = ({NewsList}) => {\n    const [cols, setCols] = useState <number>(0)\n    return (\n        <div className='NewsListBS'>\n            <Row>\n                {   \n                    NewsList.length !== 0 ?\n                    NewsList.slice(0, NewsList.length / 3).map((item: NewsItemType, index: number) => {\n                        const sliceElements = 3\n                        let counter: number = 0\n                        let ret = \n                        <Row>\n                            {NewsList.slice(sliceElements).map((item: NewsItemType, index: number) => \n                            <Col>\n                                <NewsItem\n                                style={{marginLeft: \"0px\"}}\n                                key={item._id}\n                                image={item.image}\n                                _id={item._id}\n                                date={item.date}\n                                description={item.description}\n                                subDescription={item.subDescription}\n                                />\n                            </Col>\n                            \n                            )}\n                        </Row>\n                        \n                        \n                        return ret\n                    })\n                        \n                            \n                    \n                    \n                    \n\n                        \n                    \n                    :\n                    <div className='NoNews'>Список новостей пуст...</div> \n                }\n            </Row>\n                \n        </div>\n    );\n};\n\nexport default NewsListBS;"],"mappings":";;AAAA,OAAOA,KAAK,IAAQC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAC1C,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAMlC,MAAMC,UAA8B,GAAG,QAAgB;EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC;EAC9C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAU,CAAC,CAAC;EAC5C,oBACI;IAAK,SAAS,EAAC,YAAY;IAAA,uBACvB,QAAC,GAAG;MAAA,UAEIK,QAAQ,CAACG,MAAM,KAAK,CAAC,GACrBH,QAAQ,CAACI,KAAK,CAAC,CAAC,EAAEJ,QAAQ,CAACG,MAAM,GAAG,CAAC,CAAC,CAACE,GAAG,CAAC,CAACC,IAAkB,EAAEC,KAAa,KAAK;QAC9E,MAAMC,aAAa,GAAG,CAAC;QACvB,IAAIC,OAAe,GAAG,CAAC;QACvB,IAAIC,GAAG,gBACP,QAAC,GAAG;UAAA,UACCV,QAAQ,CAACI,KAAK,CAACI,aAAa,CAAC,CAACH,GAAG,CAAC,CAACC,IAAkB,EAAEC,KAAa,kBACrE,QAAC,GAAG;YAAA,uBACA,QAAC,QAAQ;cACT,KAAK,EAAE;gBAACI,UAAU,EAAE;cAAK,CAAE;cAE3B,KAAK,EAAEL,IAAI,CAACM,KAAM;cAClB,GAAG,EAAEN,IAAI,CAACO,GAAI;cACd,IAAI,EAAEP,IAAI,CAACQ,IAAK;cAChB,WAAW,EAAER,IAAI,CAACS,WAAY;cAC9B,cAAc,EAAET,IAAI,CAACU;YAAe,GAL/BV,IAAI,CAACO,GAAG;cAAA;cAAA;cAAA;YAAA;UAMX;YAAA;YAAA;YAAA;UAAA,QACA;QAEL;UAAA;UAAA;UAAA;QAAA,QACC;QAGN,OAAOH,GAAG;MACd,CAAC,CAAC,gBAUF;QAAK,SAAS,EAAC,QAAQ;QAAA,UAAC;MAAuB;QAAA;QAAA;QAAA;MAAA;IAAM;MAAA;MAAA;MAAA;IAAA;EAEvD;IAAA;IAAA;IAAA;EAAA,QAEJ;AAEd,CAAC;AAAC,GA9CIX,UAA8B;AAAA,KAA9BA,UAA8B;AAgDpC,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}