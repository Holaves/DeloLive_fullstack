{"ast":null,"code":"import axios from \"axios\";\nclass axiosReq {\n  async GET(url) {\n    const resp = await axios.get(url);\n    return resp.data;\n  }\n  async GetOne(url, id) {\n    const resp = await axios.get(url + '/' + id);\n    return resp.data;\n  }\n  async POST(url, body, imageFile) {\n    const formData = new FormData();\n    formData.append('description', body.description);\n    formData.append('subDescription', JSON.stringify(body.subDescription));\n    formData.append('image', imageFile);\n    await axios.post(url, formData).catch(error => {\n      console.log(error);\n    });\n  }\n  async DELETE(url, id) {\n    await axios.delete(url + '/' + id).catch(error => {\n      console.error(error);\n    });\n  }\n}\nexport default new axiosReq();","map":{"version":3,"names":["axios","axiosReq","GET","url","resp","get","data","GetOne","id","POST","body","imageFile","formData","FormData","append","description","JSON","stringify","subDescription","post","catch","error","console","log","DELETE","delete"],"sources":["/home/user/MyLinuxProjects/delolive/frontend/src/classes/axiosRequests.ts"],"sourcesContent":["import axios from \"axios\"\nimport NewsItemType from \"../types/NewsItem\"\n\ninterface bodyPost{\n    description: string;\n    subDescription?: [string, string?, string?];\n}\n\nclass axiosReq{\n    async GET(url: string): Promise<NewsItemType[]> {\n        const resp = await axios.get(url)\n        return resp.data as NewsItemType[]\n    }\n    async GetOne(url: string, id: string){\n        const resp = await axios.get(url + '/' + id)\n        return resp.data\n    }\n    async POST(url: string, body: bodyPost, imageFile: File){\n        const formData = new FormData();\n        formData.append('description', body.description);\n        formData.append('subDescription', JSON.stringify(body.subDescription));\n        formData.append('image', imageFile);\n    \n        await axios.post(url, formData)\n          .catch(error => {\n            console.log(error);\n          });\n    }\n    async DELETE(url: string, id: string){\n        await axios.delete(url + '/' + id)\n        .catch(error => {\n            console.error(error);\n        });\n    }\n}\n\nexport default new axiosReq()\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAQzB,MAAMC,QAAQ;EACV,MAAMC,GAAG,CAACC,GAAW,EAA2B;IAC5C,MAAMC,IAAI,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACF,GAAG,CAAC;IACjC,OAAOC,IAAI,CAACE,IAAI;EACpB;EACA,MAAMC,MAAM,CAACJ,GAAW,EAAEK,EAAU,EAAC;IACjC,MAAMJ,IAAI,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACF,GAAG,GAAG,GAAG,GAAGK,EAAE,CAAC;IAC5C,OAAOJ,IAAI,CAACE,IAAI;EACpB;EACA,MAAMG,IAAI,CAACN,GAAW,EAAEO,IAAc,EAAEC,SAAe,EAAC;IACpD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEJ,IAAI,CAACK,WAAW,CAAC;IAChDH,QAAQ,CAACE,MAAM,CAAC,gBAAgB,EAAEE,IAAI,CAACC,SAAS,CAACP,IAAI,CAACQ,cAAc,CAAC,CAAC;IACtEN,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,SAAS,CAAC;IAEnC,MAAMX,KAAK,CAACmB,IAAI,CAAChB,GAAG,EAAES,QAAQ,CAAC,CAC5BQ,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACR;EACA,MAAMG,MAAM,CAACrB,GAAW,EAAEK,EAAU,EAAC;IACjC,MAAMR,KAAK,CAACyB,MAAM,CAACtB,GAAG,GAAG,GAAG,GAAGK,EAAE,CAAC,CACjCY,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB,CAAC,CAAC;EACN;AACJ;AAEA,eAAe,IAAIpB,QAAQ,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}