{"ast":null,"code":"var _jsxFileName = \"/home/user/MyLinuxProjects/delolive/frontend/src/components/NewsListBS.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport NewsItem from './NewsItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewsListBS = _ref => {\n  _s();\n  let {\n    NewsList\n  } = _ref;\n  const [updatedNewsList, setUpdatedNewsList] = useState([]);\n  const updateList = list => {\n    console.log(list);\n    if (list.length % 3 === 0) {\n      console.log('if1');\n      return list;\n    } else if (list.length % 3 === 1) {\n      console.log('if2');\n      return list.slice(list.length - 1, 1);\n    } else if (list.length % 3 === 2) {\n      console.log('if3');\n      return list.slice(list.length - 2, 2);\n    } else {\n      console.log('if4');\n      return list;\n    }\n  };\n  useEffect(() => {\n    setUpdatedNewsList(updateList(NewsList));\n    console.log(updatedNewsList);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"NewsListBS\",\n    children: updatedNewsList.length !== 0 ? updatedNewsList.slice(0, updatedNewsList.length / 3).map((item, index) => {\n      const sliceElements = 3;\n      let counter = 3 * (0 + index);\n      return /*#__PURE__*/_jsxDEV(Row, {\n        children: updatedNewsList.slice(counter, sliceElements).map((item, index) => /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(NewsItem, {\n            style: {\n              marginLeft: \"0px\"\n            },\n            image: item.image,\n            _id: item._id,\n            date: item.date,\n            description: item.description,\n            subDescription: item.subDescription\n          }, item._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NoNews\",\n      children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0435\\u0439 \\u043F\\u0443\\u0441\\u0442...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(NewsListBS, \"m8pjefi8hkDcd1UDtO8GmPLQYPs=\");\n_c = NewsListBS;\nexport default NewsListBS;\nvar _c;\n$RefreshReg$(_c, \"NewsListBS\");","map":{"version":3,"names":["React","useEffect","useState","Row","Col","NewsItem","NewsListBS","NewsList","updatedNewsList","setUpdatedNewsList","updateList","list","console","log","length","slice","map","item","index","sliceElements","counter","marginLeft","image","_id","date","description","subDescription"],"sources":["/home/user/MyLinuxProjects/delolive/frontend/src/components/NewsListBS.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from 'react';\nimport NewsItemType from '../types/NewsItem';\nimport { Row, Col } from 'react-bootstrap';\nimport NewsItem from './NewsItem';\n\ninterface NewsListBSprops{\n    NewsList: NewsItemType[];\n}\n\nconst NewsListBS:FC<NewsListBSprops> = ({NewsList}) => {\n    const [updatedNewsList, setUpdatedNewsList] = useState <NewsItemType[]>([])\n    const updateList = (list: NewsItemType[]): NewsItemType[] => {\n        console.log(list)\n        if(list.length % 3 === 0){\n            console.log('if1')\n            return list\n        }\n        else if(list.length % 3 === 1){\n            console.log('if2')\n\n            return list.slice(list.length - 1, 1)\n        }\n        else if(list.length % 3 === 2){\n            console.log('if3')\n\n            return list.slice(list.length - 2, 2)\n        }\n        else{\n            console.log('if4')\n\n            return list\n        }\n    }\n    useEffect(() => {\n        setUpdatedNewsList(updateList(NewsList))\n        console.log(updatedNewsList)\n    }, [])\n\n    return (\n        <div className='NewsListBS'>\n                {   \n                    updatedNewsList.length !== 0 ?\n                    updatedNewsList.slice(0, updatedNewsList.length / 3).map((item: NewsItemType, index: number) => {\n                        const sliceElements = 3\n                        let counter: number = 3 * (0 + index)\n                        \n                        return (\n                            <Row>\n                                {updatedNewsList.slice(counter, sliceElements).map((item: NewsItemType, index: number) => \n                                <Col>\n                                    <NewsItem\n                                    style={{marginLeft: \"0px\"}}\n                                    key={item._id}\n                                    image={item.image}\n                                    _id={item._id}\n                                    date={item.date}\n                                    description={item.description}\n                                    subDescription={item.subDescription}\n                                    />\n                                </Col>\n                                \n                                )}\n                            </Row>\n                        )\n                    })\n                    :\n                    <div className='NoNews'>Список новостей пуст...</div> \n                }\n                \n        </div>\n    );\n};\n\nexport default NewsListBS;"],"mappings":";;AAAA,OAAOA,KAAK,IAAQC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAEtD,SAASC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAC1C,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAMlC,MAAMC,UAA8B,GAAG,QAAgB;EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC;EAC9C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAkB,EAAE,CAAC;EAC3E,MAAMQ,UAAU,GAAIC,IAAoB,IAAqB;IACzDC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,IAAGA,IAAI,CAACG,MAAM,GAAG,CAAC,KAAK,CAAC,EAAC;MACrBF,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;MAClB,OAAOF,IAAI;IACf,CAAC,MACI,IAAGA,IAAI,CAACG,MAAM,GAAG,CAAC,KAAK,CAAC,EAAC;MAC1BF,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;MAElB,OAAOF,IAAI,CAACI,KAAK,CAACJ,IAAI,CAACG,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC;IACzC,CAAC,MACI,IAAGH,IAAI,CAACG,MAAM,GAAG,CAAC,KAAK,CAAC,EAAC;MAC1BF,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;MAElB,OAAOF,IAAI,CAACI,KAAK,CAACJ,IAAI,CAACG,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC;IACzC,CAAC,MACG;MACAF,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;MAElB,OAAOF,IAAI;IACf;EACJ,CAAC;EACDV,SAAS,CAAC,MAAM;IACZQ,kBAAkB,CAACC,UAAU,CAACH,QAAQ,CAAC,CAAC;IACxCK,OAAO,CAACC,GAAG,CAACL,eAAe,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAK,SAAS,EAAC,YAAY;IAAA,UAEfA,eAAe,CAACM,MAAM,KAAK,CAAC,GAC5BN,eAAe,CAACO,KAAK,CAAC,CAAC,EAAEP,eAAe,CAACM,MAAM,GAAG,CAAC,CAAC,CAACE,GAAG,CAAC,CAACC,IAAkB,EAAEC,KAAa,KAAK;MAC5F,MAAMC,aAAa,GAAG,CAAC;MACvB,IAAIC,OAAe,GAAG,CAAC,IAAI,CAAC,GAAGF,KAAK,CAAC;MAErC,oBACI,QAAC,GAAG;QAAA,UACCV,eAAe,CAACO,KAAK,CAACK,OAAO,EAAED,aAAa,CAAC,CAACH,GAAG,CAAC,CAACC,IAAkB,EAAEC,KAAa,kBACrF,QAAC,GAAG;UAAA,uBACA,QAAC,QAAQ;YACT,KAAK,EAAE;cAACG,UAAU,EAAE;YAAK,CAAE;YAE3B,KAAK,EAAEJ,IAAI,CAACK,KAAM;YAClB,GAAG,EAAEL,IAAI,CAACM,GAAI;YACd,IAAI,EAAEN,IAAI,CAACO,IAAK;YAChB,WAAW,EAAEP,IAAI,CAACQ,WAAY;YAC9B,cAAc,EAAER,IAAI,CAACS;UAAe,GAL/BT,IAAI,CAACM,GAAG;YAAA;YAAA;YAAA;UAAA;QAMX;UAAA;UAAA;UAAA;QAAA,QACA;MAEL;QAAA;QAAA;QAAA;MAAA,QACC;IAEd,CAAC,CAAC,gBAEF;MAAK,SAAS,EAAC,QAAQ;MAAA,UAAC;IAAuB;MAAA;MAAA;MAAA;IAAA;EAAM;IAAA;IAAA;IAAA;EAAA,QAG3D;AAEd,CAAC;AAAC,GA9DIjB,UAA8B;AAAA,KAA9BA,UAA8B;AAgEpC,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}