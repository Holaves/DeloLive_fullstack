{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isValidate: false,\n  isState: false,\n  setPassword: '',\n  isSetPassword: false,\n  sendCounter: 0,\n  createUserData: {\n    surname: '',\n    name: '',\n    fatherName: '',\n    telephone: '',\n    email: '',\n    password: '',\n    birthdate: '',\n    card: ''\n  }\n};\nexport const registrationSlice = createSlice({\n  name: 'registration',\n  initialState,\n  reducers: {\n    validate: state => {\n      state.isValidate = true;\n    },\n    registrate: state => {\n      state.isState = !state.isState;\n    },\n    setUserData: (state, action) => {\n      state.createUserData = {\n        ...state.createUserData,\n        ...action.payload\n      };\n    },\n    setPasswordUpdate: (state, action) => {\n      state.setPassword = action.payload;\n    },\n    setIsSetPassword: (state, action) => {\n      state.isSetPassword = action.payload;\n    },\n    setSendCounter: state => {\n      state.sendCounter += 1;\n    }\n  }\n});\nexport const {\n  registrate,\n  setUserData,\n  setPasswordUpdate,\n  setIsSetPassword,\n  validate,\n  setSendCounter\n} = registrationSlice.actions;\nexport const selectReg = state => state.registration.isState;\nexport const selectValid = state => state.registration.isValidate;\nexport const selectUserData = state => state.registration.createUserData;\nexport const setPassword = state => state.registration.setPassword;\nexport const isSetPassword = state => state.registration.isSetPassword;\nexport const selectSendCounter = state => state.registration.sendCounter;\nexport default registrationSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isValidate","isState","setPassword","isSetPassword","sendCounter","createUserData","surname","name","fatherName","telephone","email","password","birthdate","card","registrationSlice","reducers","validate","state","registrate","setUserData","action","payload","setPasswordUpdate","setIsSetPassword","setSendCounter","actions","selectReg","registration","selectValid","selectUserData","selectSendCounter","reducer"],"sources":["/home/user/MyLinuxProjects/delolive/frontend/src/components/globalSlices/registrationSlice.ts"],"sourcesContent":["import { createSlice , PayloadAction} from \"@reduxjs/toolkit\";\nimport userModel from \"../../types/UserModel\";\nimport IRegistration from \"../../types/interfaces/IRegistration\";\n\n\nconst initialState: IRegistration = {\n    isValidate: false,\n    isState: false,\n    setPassword: '',\n    isSetPassword: false,\n    sendCounter: 0,\n\n    createUserData: {\n        surname: '',\n        name: '',\n        fatherName: '',\n        telephone: '',\n        email: '',\n        password: '',\n        birthdate: '',\n        card: ''\n    } \n};\n\nexport const registrationSlice = createSlice({\n    name: 'registration',\n    initialState,\n    reducers: {\n        validate: (state) => {\n            state.isValidate = true\n        },\n        registrate: (state) => {\n            state.isState = !state.isState\n        },\n        setUserData: (state, action: PayloadAction<Partial<userModel>>) => {\n            state.createUserData = { ...state.createUserData, ...action.payload };\n        },\n        setPasswordUpdate: (state, action: PayloadAction<Partial<string>>) => {\n            state.setPassword = action.payload\n        },\n        setIsSetPassword: (state, action: PayloadAction<Partial<boolean>>) => {\n            state.isSetPassword = action.payload\n        },\n        setSendCounter: (state) => {\n            state.sendCounter += 1\n        }\n    }\n})\n\nexport const { registrate, setUserData, setPasswordUpdate, setIsSetPassword, validate, setSendCounter } = registrationSlice.actions;\n\nexport const selectReg = (state: any) => state.registration.isState;\nexport const selectValid = (state: any) => state.registration.isValidate;\nexport const selectUserData = (state: any) => state.registration.createUserData;\nexport const setPassword = (state: any) => state.registration.setPassword;\nexport const isSetPassword = (state: any) => state.registration.isSetPassword;\nexport const selectSendCounter = (state: any) => state.registration.sendCounter\n\nexport default registrationSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAK7D,MAAMC,YAA2B,GAAG;EAChCC,UAAU,EAAE,KAAK;EACjBC,OAAO,EAAE,KAAK;EACdC,WAAW,EAAE,EAAE;EACfC,aAAa,EAAE,KAAK;EACpBC,WAAW,EAAE,CAAC;EAEdC,cAAc,EAAE;IACZC,OAAO,EAAE,EAAE;IACXC,IAAI,EAAE,EAAE;IACRC,UAAU,EAAE,EAAE;IACdC,SAAS,EAAE,EAAE;IACbC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,EAAE;IACbC,IAAI,EAAE;EACV;AACJ,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAGhB,WAAW,CAAC;EACzCS,IAAI,EAAE,cAAc;EACpBR,YAAY;EACZgB,QAAQ,EAAE;IACNC,QAAQ,EAAGC,KAAK,IAAK;MACjBA,KAAK,CAACjB,UAAU,GAAG,IAAI;IAC3B,CAAC;IACDkB,UAAU,EAAGD,KAAK,IAAK;MACnBA,KAAK,CAAChB,OAAO,GAAG,CAACgB,KAAK,CAAChB,OAAO;IAClC,CAAC;IACDkB,WAAW,EAAE,CAACF,KAAK,EAAEG,MAAyC,KAAK;MAC/DH,KAAK,CAACZ,cAAc,GAAG;QAAE,GAAGY,KAAK,CAACZ,cAAc;QAAE,GAAGe,MAAM,CAACC;MAAQ,CAAC;IACzE,CAAC;IACDC,iBAAiB,EAAE,CAACL,KAAK,EAAEG,MAAsC,KAAK;MAClEH,KAAK,CAACf,WAAW,GAAGkB,MAAM,CAACC,OAAO;IACtC,CAAC;IACDE,gBAAgB,EAAE,CAACN,KAAK,EAAEG,MAAuC,KAAK;MAClEH,KAAK,CAACd,aAAa,GAAGiB,MAAM,CAACC,OAAO;IACxC,CAAC;IACDG,cAAc,EAAGP,KAAK,IAAK;MACvBA,KAAK,CAACb,WAAW,IAAI,CAAC;IAC1B;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEc,UAAU;EAAEC,WAAW;EAAEG,iBAAiB;EAAEC,gBAAgB;EAAEP,QAAQ;EAAEQ;AAAe,CAAC,GAAGV,iBAAiB,CAACW,OAAO;AAEnI,OAAO,MAAMC,SAAS,GAAIT,KAAU,IAAKA,KAAK,CAACU,YAAY,CAAC1B,OAAO;AACnE,OAAO,MAAM2B,WAAW,GAAIX,KAAU,IAAKA,KAAK,CAACU,YAAY,CAAC3B,UAAU;AACxE,OAAO,MAAM6B,cAAc,GAAIZ,KAAU,IAAKA,KAAK,CAACU,YAAY,CAACtB,cAAc;AAC/E,OAAO,MAAMH,WAAW,GAAIe,KAAU,IAAKA,KAAK,CAACU,YAAY,CAACzB,WAAW;AACzE,OAAO,MAAMC,aAAa,GAAIc,KAAU,IAAKA,KAAK,CAACU,YAAY,CAACxB,aAAa;AAC7E,OAAO,MAAM2B,iBAAiB,GAAIb,KAAU,IAAKA,KAAK,CAACU,YAAY,CAACvB,WAAW;AAE/E,eAAeU,iBAAiB,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}